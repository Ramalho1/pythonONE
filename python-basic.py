print("\n\n\nOl√°, mundo! üêç") # python aceita emojis em forma de texto normal

# note que nesse print n√£o tem "f" dentro do par√™nteses. O pr√≥ximo ter√°
'''
esse √© um coment√°rio grande
com v√°rias linhas... Se voc√™ escreve "\t", significar√° dar espa√ßo
inclusive pode-se usar ele dentro do print, veja abaixo:
'''
name = "Andr√© Ramalho"
cargo = "Desenvolvedor Python"
email = "exatas@email.com"

print(f"""
================================
        Boas vindas ao sistema
================================
Nome:   {name}
Cargo:  {cargo}
Email:  {email}
================================
""")

'''f"texto {variavel}" ‚Üí COM f-string

"texto" + variavel ‚Üí SEM f-string

{ } dentro da f-string ‚Üí local onde vari√°veis/express√µes entram
'''

nome = input("Qual √© o seu nome? \n")
idade1 = input("Qual sua idade? \n")
# o imput para o programa e aguarda a digita√ß√£o. Ele vai receber e
# guardar como string


print(f"Prazer, {nome}! Voc√™ tem {idade1} anos. \n")


# para ler a idade como n√∫mero, precisar√≠amos fazer:
constante = int(input("Digite mais um n√∫mero pra somar"))

print(f"\n o n√∫mero digitado foi: {constante} ")

'''se quisermos converter a idade1 para poder realizar opera√ß√µes 
matem√°ticas, precisar√≠amos fazer o exemplo abaixo:
'''
somaIdade=float(idade1) + constante
print(f"A soma das idade √©: {somaIdade}")

import time
time.sleep(2)

# Opera√ß√µes matem√°ticas sem digita√ß√£o
# Primeira coisa, devido a tipagem din√¢mica do python, n√£o precisamos
# evidenciar os tipos de vari√°veis de n√∫meros

print (f"""\n Vamos trabalhar com dois n√∫meros agora
       ======== :D ===== :D ======== :D ===========

       o primeiro n√∫mero ser√° '10' e o segundo o '5'

       ======== :D ===== :D ======== :D ===========\n""")
time.sleep(3)
numero1 = 8
numero2 = 5
resultado1 = numero1 + numero2
resultado2 = numero1 - numero2
resultado3 = numero1 * numero2
resultado4 = numero1 / numero2
resultado5 = numero1 ** numero2
resultado6 = numero1 ** (1/2)
resultado7 = numero1 ** (1/3)
resultado8 = numero1%numero2 
#Verificador de par ou √≠mpar
if numero1 % 2 ==0:
    print (f"o primeiro n√∫mero que √© {numero1} √© par")
else: print (f"o primeiro n√∫mero que √© {numero1} √© √≠mpar")
time.sleep(2)
print(f"""
opera√ß√£o de soma ser√°: {resultado1}
opera√ß√£o de subtra√ß√£o ser√°: {resultado2}
opera√ß√£o de multiplica√ß√£o ser√°: {resultado3}
opera√ß√£o de divis√£o ser√°: {resultado4}
opera√ß√£o de pot√™ncia ser√°: {resultado5} 
opera√ß√£o de radicia√ß√£o ser√°: {resultado6}
opera√ß√£o de radicia√ß√£o ser√°: {resultado7}
      """) #rever os c√°lculos de pot√™ncia
time.sleep(2)

#Opera√ß√£o com n√∫meros digitados seguidos
n1, n2 = input("digite dois n√∫meros seguidos, digitando espa√ßo entre eles ").split()#dividir
n1 = float(n1)
n2 = float(n2)
n3 = n1 + n2 
print(f"A soma de {n1} + {n2} = {n3}") 
#Neste caso, o usu√°rio precisa digitar clicando em 'espa√ßo'
# entre os dois n√∫meros
time.sleep(1)
# Lista da mem√≥ria
frutas = ["ma√ß√£", "banana", "laranja"]
print(f"Minhas frutas favoritas: {frutas}")


# Lista digitada
print("Digite Cinco frutas separadas por v√≠rgula")
frutas2=[]

for i in range(5):
    fruta = input(f"Digite a {i+1}¬∞ fruta ->")
    frutas2.append(fruta)  #m√©todo que adicionar elementos ao final da lista
print(f"As frutas s√£o: {frutas2}")

print("Mais um teste memorizando n√∫meros com declara√ß√£o no in√≠cio \n")
x = float(input("Digite um n√∫mero: "))
y = float(input("Digite um n√∫mero: "))

print("Vamos somar os n√∫meros que voc√™ digitou")
resultado=x+y
print(f"O n√∫mero: {x} mais o n√∫mero: {y} √© igual a {resultado}")


#outro exemplo de vetor para teste
print("Vamos preencher um vetor de n√∫mero")
vetor=[]
for i in range(4):
   vetorN = input(f"Digite o vetor n¬∞ {i+1}  ")
   vetor.append(vetorN)
print (f"""O vetor na vertical ser√°:
       V(1)= {vetor[0]}
       V(2)= {vetor[1]}
       V(3)= {vetor[2]}
       V(4)= {vetor[3]}
       """)